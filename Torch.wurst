package Torch

// STDLib
import Assets
import UnitObjEditing
import LinkedList
import ObjectIds

// Local imports
import LocalObjectIDs
import SkullBuildingDefinition
import SkullUnit

//=============================================================
// Unit definition
//=============================================================

class TorchDefinition extends SkullBuildingDefinition
    
    construct( int unitId )
        super( unitId, UnitIds.farm )
        train    = "Build a"
        name     = "Torch"
        hotkey   = "T"
        desc     = "Basic scouting bulding"
        features = asList( "Provides great vision at night" )
        upgrades = commaList( BUILDING_LAMP )
        this.setDefault()
        this.setModelFile("Doodads/LordaeronSummer/Props/TorchHuman/TorchHuman0.mdx")
        this.setIconGameInterface("ReplaceableTextures/CommandButtons/BTNTorch.dds")
        this.setPathingMap("PathTextures/2x2Default.tga")
        this.setScalingValue(1.5)
        this.setSelectionScale(0.7)
        this.setButtonPositionX(0)
        this.setButtonPositionY(2)
        this.setCollisionSize(32)
        this.setBuildTime(1)
        this.setGoldCost(0)
        this.setLumberCost(0)
        this.setSightRadiusDay(900)
        this.setSightRadiusNight(800)
        this.setHitPointsMaximumBase(100)

@compiletime function generate()
    new TorchDefinition( BUILDING_TORCH )        

//=============================================================
// Chicken class
//=============================================================

public class Torch extends SkullUnit

    //=============================================================
    // Constructor
    //=============================================================

    construct( unit unitID )
        super( unitID )

    static function initialize()
        register( BUILDING_TORCH, unitID -> new Torch( unitID ) )
    
//=============================================================
// Initialisation
//=============================================================
init
    Torch.initialize()
    