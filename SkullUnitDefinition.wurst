package SkullUnitDefinition

// STDLib
import StringExtensions
import UnitObjEditing
import LinkedList
import ObjectIds

// Local imports
import ColorUtils

//=============================================================
// SkullUnitDefinition class
//=============================================================

public abstract class SkullUnitDefinition extends UnitDefinition

    constant train     = "Train a"
    constant name      = "Unit"
    constant hotkey    = "X"
    constant desc      = ""
    constant limit     = ""
    constant features  = asList( "" )
    constant abilities = commaList( "" )
    constant built     = commaList( "" )

    construct( int unitId, int origID )
        super( unitId, origID )
        this.setCanFlee(false)
        this.setLevel(1)
        this.setFoodCost(0)
        this.setPointValue(0)
        this.setManaMaximum(0)
        this.setManaRegeneration(0)
        this.setManaInitialAmount(0)
        this.setArmorType( ArmorType.Unarmored )
        this.setDefenseBase(0)
        this.setDefenseUpgradeBonus(0)
        this.setSelectionScale(1.0)
        this.setHideMinimapDisplay(false)
        this.setRace( Race.Human )
        this.setUnitSoundSet("")
        this.setAttacksEnabled(1)
        this.setAttack1RangeMotionBuffer(250)
        this.setAttack1TargetsAllowed( commaList( TargetsAllowed.ground, TargetsAllowed.structure, TargetsAllowed.debris, TargetsAllowed.item_t, TargetsAllowed.ward ) )
        this.setAttack1WeaponSound( WeaponSound.WoodLightBash )
        this.setAttack1WeaponType( WeaponType.Normal )
        this.setAttack1AnimationBackswingPoint(0.5)
        this.setAttack1AnimationDamagePoint(0.5)
        this.setAttack1DamageNumberofDice(1)
        this.setAttack1DamageSidesperDie(1)
        this.setAttack1Range(32)
        this.setAttack1AttackType( AttackType.Normal )
        this.setGoldBountyAwardedBase(0)
        this.setHitPointsRegenerationType("")

    function setDefault()
        this.setName(name)
        this.setTooltipBasic( "{0} {1}".format( train, name.color( NAME_COLOR ) ) )
        this.setTooltipExtended( DOT + features.joinBy("|n" + DOT ) )
        this.setNameEditorSuffix(" (Wurst)")
        this.setHotkey(hotkey)
        this.setStructuresBuilt( built )
        this.setNormalAbilities( abilities )

    override function setTooltipExtended( string data )
        var txt = data.color( FEATURE_COLOR )
        if( desc.length() > 0 )
            txt = desc + "|n" + txt
        if( limit.length() > 0 )
            txt = txt + ( "|n|nLimit : " + limit ).color( ERROR_COLOR )
        else
            txt = txt + ( "|nLimit : " ).color( ERROR_COLOR ) + "Unlimited"
        super.setTooltipExtended( txt )    

    function setTooltipExtended( string data, bool uncontrollable )
        var txt = data.color( FEATURE_COLOR )
        if( desc.length() > 0 )
            txt = desc + "|n" + txt
        if( limit.length() > 0 )
            txt = txt + ( "|nLimit : " ).color( ERROR_COLOR ) + limit
        else
            txt = txt + ( "|nLimit : " ).color( ERROR_COLOR ) + "Unlimited"
        if( uncontrollable )
            txt = txt + TEXT_UNCONTROLLABLE
        super.setTooltipExtended( txt )
        