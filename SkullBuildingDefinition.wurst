package SkullBuildingDefinition

// STDLib
import StringExtensions
import UnitObjEditing
import LinkedList
import ObjectIds

// Local imports
import ColorUtils

//=============================================================
// SkullBuildingDefinition class
//=============================================================

public abstract class SkullBuildingDefinition extends BuildingDefinition

    constant train     = "Build a"
    constant name      = "Building"
    constant hotkey    = "X"
    constant desc      = ""
    constant limit     = ""
    constant features  = asList( "" )
    constant abilities = commaList( "" )
    constant units     = commaList( "" )
    constant require   = commaList( "" )
    constant upgrades  = commaList( "" )

    construct( int unitId, int origID )
        super( unitId, origID )
        this.setButtonPositionX(0)
        this.setButtonPositionY(0)
        this.setSightRadiusDay(300)
        this.setSightRadiusNight(300)
        this.setHitPointsRegenerationType("")
        this.setManaMaximum(0)
        this.setManaInitialAmount(0)
        this.setArmorType( ArmorType.Fortified )
        this.setTargetedAs( "structure" )
        this.setHideMinimapDisplay(false)
        this.setRevivesDeadHeros(false)
        this.setDependencyEquivalents("")
        this.setNormalAbilities( "" )
        this.setUpgradesUsed( "" )
        this.setFoodProduced(0)
        this.setFoodCost(0)
        this.setPointValue(0)
        this.setUnitClassification( "mechanical" )
        this.setDefenseUpgradeBonus(0)
        this.setRepairGoldCost(0)
        this.setRepairLumberCost(50)
        this.setGroundTexture("")
        this.setArtSpecial("")

    function setDefault()        
        this.setName(name)
        this.setTooltipBasic( "{0} {1}".format( train, name.color( NAME_COLOR ) ) )
        this.setTooltipExtended( DOT + features.joinBy("|n" + DOT ) )
        this.setNameEditorSuffix(" (Wurst)")
        this.setHotkey(hotkey)
        this.setUnitsTrained( units )
        this.setNormalAbilities( abilities )
        this.setRequirements( require )
        this.setUpgradesTo( upgrades )

    override function setTooltipExtended( string data )
        var txt = data.color( FEATURE_COLOR )
        if( desc.length() > 0 )
            txt = desc + "|n" + txt
        if( limit.length() > 0 )
            txt = txt + ( "|nLimit : " ).color( ERROR_COLOR ) + limit
        else
            txt = txt + ( "|nLimit : " ).color( ERROR_COLOR ) + "Unlimited"
        super.setTooltipExtended( txt )    
        